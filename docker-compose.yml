version: "3"

services:
  db:
    build:
      context: .
      dockerfile: ./docker/db.Dockerfile
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: on-failure

  rabbit:
    hostname: rabbit
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - "15672:15672"

  web:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    command: bash -c "sleep 15; python /usr/src/app/manage.py migrate --noinput && python /usr/src/app/manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/usr/src/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbit
    restart: on-failure

  celery:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    command: bash -c "sleep 30; celery -A website worker -l info"
    volumes:
      - .:/usr/src/app
    depends_on:
      - db
      - rabbit
      - web
    restart: on-failure

  celery-beat:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    command: bash -c "sleep 30; celery -A website beat -l info -S django"
    volumes:
      - .:/usr/src/app
    depends_on:
      - db
      - rabbit
      - web
    restart: on-failure

volumes: 
  postgres_data:
